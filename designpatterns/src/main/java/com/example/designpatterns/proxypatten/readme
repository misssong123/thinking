----------------------------------------------代理------------------------------------------------------
1.常见代理方法
(1)静态代理
优点：静态代理模式在不改变目标对象的前提下，实现了对目标对象的功能扩展。
缺点：静态代理实现了目标对象的所有方法，一旦目标接口增加方法，代理对象和目标对象都要进行相应的修改，增加维护成本。
(2)动态代理
a.代理对象不需要实现接口，但是目标对象一定要实现接口，否则不能用动态代理。
b.动态代理的方式中，所有的函数调用最终都会经过 invoke 函数的转发，因此我们就可以在这里做一些自己想做的操作，
比如日志系统、事务、拦截器、权限控制等。
c.JDK 动态代理有一个最致命的问题是它只能代理实现了某个接口的实现类，并且代理类也只能代理接口中实现的方法，要是实现类中有自己私有的方法，
而接口中没有的话，该方法不能进行代理调用。
怎么解决这个问题呢？我们可以用 CGLIB 动态代理机制。
(3)CGLIB动态代理
Cglib动态代理：无需代理类实现接口，使用Cblib中的Enhancer来生成代理对象子类，并实现MethodInterceptor中的intercept方法，在此方法中可以实现增强功能。
(4)切面,切点
2.遇到的问题
(1)同一个类中方法相互调用无法进行代理？
